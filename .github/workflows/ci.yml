# Copyright 2020 Signal Messenger, LLC
# SPDX-License-Identifier: AGPL-3.0-only

name: CI
on:
  push:
    branches:
      - development
      - main
      - '[0-9]+.[0-9]+.x'
  pull_request:

permissions:
  contents: write

jobs:
  windows:
    runs-on: windows-latest
    timeout-minutes: 30

    steps:
    - run: systeminfo
    - run: git config --global core.autocrlf false
    - run: git config --global core.eol lf
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - name: Setup pnpm
      uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
    - name: Setup node.js
      uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4
      with:
        node-version-file: '.nvmrc'
        cache: 'pnpm'
        cache-dependency-path: 'pnpm-lock.yaml'

    - name: Install Desktop node_modules
      run: pnpm install
      env:
        NPM_CONFIG_LOGLEVEL: verbose

    - run: pnpm run generate
    - run: pnpm run test-node
    - run: copy package.json temp.json
    - run: del package.json
    - run: type temp.json | findstr /v certificateSubjectName | findstr /v certificateSha1 > package.json
    - run: pnpm run prepare-beta-build

    - name: Create bundle
      run: pnpm run build:esbuild:prod
    - name: Create preload cache
      run: pnpm run build:preload-cache
      env:
        ARTIFACTS_DIR: artifacts/win

    - name: Build Windows installer (NSIS)
      run: pnpm run build:release
      env:
        DISABLE_INSPECT_FUSE: on

    - name: Upload Windows installer (.exe)
      if: success()
      uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4
      with:
        name: Signal-Windows-Installer
        path: release/*.exe
        if-no-files-found: error

    - name: Upload Windows release folder (dev/untagged)
      if: success() && github.ref != 'refs/heads/main'
      uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4
      with:
        name: Signal-Windows-Release
        path: release/**
        if-no-files-found: error

    - name: Upload installer size
      if: ${{ github.repository == 'signalapp/Signal-Desktop-Private' && github.ref == 'refs/heads/main' }}
      run: node ts/scripts/dd-installer-size.js windows
      env:
        DD_API_KEY: ${{ secrets.DATADOG_API_KEY }}

    - run: pnpm run test-electron
      env:
        ARTIFACTS_DIR: artifacts/windows
        WORKER_COUNT: 4
      timeout-minutes: 5
    - run: pnpm run test-release
      env:
        SIGNAL_ENV: production

    - name: Create tag for release
      if: success() && github.event_name == 'push'
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag "auto-${{ github.ref_name }}-${{ github.run_number }}"
        git push origin "auto-${{ github.ref_name }}-${{ github.run_number }}"

    - name: Publish GitHub Release with installer
      if: success() && github.event_name == 'push'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: auto-${{ github.ref_name }}-${{ github.run_number }}
        name: "${{ github.ref_name }} build ${{ github.run_number }}"
        draft: false
        prerelease: ${{ github.ref != 'refs/heads/main' }}
        files: |
          release/*.exe

    - name: Upload artifacts on failure
      if: failure()
      uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4
      with:
        path: artifacts

  sticker-creator:
    name: Sticker Creator
    runs-on: ubuntu-latest
    timeout-minutes: 30

    defaults:
      run:
        working-directory: sticker-creator

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
      - name: Setup node.js
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4
        with:
          node-version-file: '.nvmrc'

      - name: Install Sticker Creator node_modules
        run: pnpm install

      - name: Build Sticker Creator
        run: pnpm run build

      - name: Check Sticker Creator types
        run: pnpm run check:types

      - name: Check Sticker Creator formatting
        run: pnpm run prettier:check

      - name: Check Sticker Creator linting
        run: pnpm run lint

      - name: Run tests
        run: pnpm test -- --run